//
//  MainWorker.swift
//  CryptoCurrencyApp
//
//  Created by IT-EFW-65-03 on 21/6/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

class MainWorker
{
    let apiClient : ApiClient = ApiClient()
    private let disposeBag = DisposeBag()
    
    let item = BehaviorSubject<CryptoCurrencyModel?>(value: nil)
    
    func getCurrencyAPI() -> Observable<CryptoCurrencyModel> {
        return apiClient.requestAPI(ApiRouter.Get)
    }
    
    
    func getCurrency()  {
        getCurrencyAPI()
            .observe(on: MainScheduler.instance)
            .subscribe(onNext: { postsList in
                self.item.onNext(postsList)
            }, onError: { error in
                switch error {
                case ApiError.conflict:
                    print("Conflict error")
                case ApiError.forbidden:
                    print("Forbidden error")
                case ApiError.notFound:
                    print("Not found error")
                default:
                    print("Unknown error:", error)
                }
            })
            .disposed(by: disposeBag)
    }
}
